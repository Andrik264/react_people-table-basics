{"version":3,"sources":["types/queryParams.ts","components/HomePage/HomePage.tsx","api/people.ts","components/PersonName/PersonName.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["SortBy","SortOrder","HomePage","PEOPLE_URL","a","fetch","response","ok","status","statusText","Error","json","PersonName","name","personSlug","search","useLocation","to","pathname","style","color","getTextColorBySex","sex","PersonRow","React","memo","person","useParams","className","classNames","slug","backgroundColor","born","died","mother","motherName","father","fatherName","PeopleTable","people","sortPeople","sortableColumns","Name","Sex","Born","Died","searchParams","URLSearchParams","sortBy","get","sortOrder","isSelected","useCallback","columnName","map","column","onClick","src","Object","values","includes","alt","compareStrings","b","localeCompare","PeoplePage","useSearchParams","setSearchParams","query","toLowerCase","useState","queryParams","setQueryParams","setPeople","useEffect","getPeople","then","newPeople","human","find","findParents","filteredPeople","filter","sort","p1","p2","asc","updateSearchParams","newQuery","entries","forEach","queryName","value","set","delete","applyQueryWithDebounce","debounce","handleSortChange","newSortByValue","desc","placeholder","onChange","event","target","length","Header","isActive","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4a92a2c.chunk.js","sourcesContent":["export enum SortBy {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n\nexport enum SortOrder {\n  asc = 'asc',\n  desc = 'desc',\n}\n\nexport interface QueryParams {\n  // personName: string;\n  // motherName: string;\n  // fatherName: string;\n  query: string;\n  sortBy: string;\n  sortOrder: string;\n}\n","export const HomePage = () => (\n  <h1>Home Page</h1>\n);\n","const BASE_URL = 'https://mate-academy.github.io';\nconst PEOPLE_URL = `${BASE_URL}/react_people-table/api/people.json`;\n\nexport async function getPeople() {\n  const response = await fetch(PEOPLE_URL);\n\n  if (!response.ok) {\n    const { status, statusText } = response;\n\n    throw new Error(`${status} - ${statusText}`);\n  }\n\n  return response.json();\n}\n","import React from 'react';\nimport {\n  Link, useLocation,\n} from 'react-router-dom';\nimport { Child } from '../../types/human';\n\ntype Props = {\n  name: Child['name'] | Child['fatherName'] | Child['motherName'];\n  personSlug: Child['slug'];\n};\n// const searchParams = new URLSearchParams(search);\n\nexport const PersonName: React.FC<Props> = ({ name, personSlug }) => {\n  const { search } = useLocation();\n\n  return (\n    <Link\n      to={{\n        pathname: `/people/${personSlug}`,\n        search,\n      }}\n      style={{ color: 'inherit' }}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\n\nimport { Child } from '../../types/human';\nimport { PersonName } from '../PersonName';\n\ntype Props = {\n  person: Child;\n};\n\nfunction getTextColorBySex(sex: 'f' | 'm') {\n  return sex === 'm' ? 'rgb(0, 71, 171)' : 'rgb(255, 0, 0)';\n}\n\nexport const PersonRow: React.FC<Props> = React.memo(\n  ({ person }) => {\n    const { personSlug } = useParams<{ personSlug: string }>();\n\n    return (\n      <tr\n        key={person.name}\n        className={classNames('Person')}\n        style={personSlug === person.slug\n          ? { backgroundColor: 'green' } : {}}\n      >\n        <th style={{ color: getTextColorBySex(person.sex) }}>\n          <PersonName name={person.name} personSlug={person.slug} />\n        </th>\n        <th>{person.sex}</th>\n        <th>{person.born}</th>\n        <th>{person.died}</th>\n        <th style={{\n          color: person.mother\n            ? getTextColorBySex(person.mother.sex)\n            : 'black',\n        }}\n        >\n          {person.mother ? (\n            <PersonName\n              name={person.mother.name}\n              personSlug={person.mother.slug}\n            />\n          ) : <b>{person.motherName}</b>}\n        </th>\n        <th style={{\n          color: person.father\n            ? getTextColorBySex(person.father.sex)\n            : 'black',\n        }}\n        >\n          {person.father ? (\n            <PersonName\n              name={person.father.name}\n              personSlug={person.father.slug}\n            />\n          ) : <b>{person.fatherName}</b>}\n        </th>\n      </tr>\n    );\n  },\n);\n","import React, {\n  useCallback,\n} from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { Child } from '../../types/human';\nimport { SortBy, SortOrder } from '../../types/queryParams';\n\nimport { PersonRow } from '../PersonRow';\n\ntype Props = {\n  people: Child[],\n  sortPeople: (arg0: SortBy) => void;\n};\n\nexport const PeopleTable: React.FC<Props> = React.memo(({\n  people,\n  sortPeople,\n}) => {\n  const sortableColumns = [SortBy.Name, SortBy.Sex, SortBy.Born, SortBy.Died];\n  const { search } = useLocation();\n  const searchParams = new URLSearchParams(search);\n  const sortBy = searchParams.get('sortBy');\n  const sortOrder = searchParams.get('sortOrder');\n\n  const isSelected = useCallback((columnName) => {\n    return columnName === sortBy;\n  }, [sortBy]);\n\n  const isSortOrderValid = () => {\n    return Object.values(SortOrder).includes(sortOrder as unknown as SortOrder);\n  };\n\n  return (\n    <table className=\"PeopleTable table\">\n      <thead>\n        <tr>\n          {sortableColumns.map(column => (\n            <th\n              key={column}\n              className=\"\n                PeopleTable__column-title\n                PeopleTable__column-title--sortable\"\n              onClick={() => sortPeople(column)}\n            >\n              {column}\n              {isSelected(column) ? (\n                <img\n                  src={`images/sort_${isSortOrderValid() ? sortOrder : 'both'}.png`}\n                  alt={`sort ${sortOrder || 'both'}`}\n                />\n              ) : (\n                <img\n                  src=\"images/sort_both.png\"\n                  alt=\"sort both\"\n                />\n              )}\n            </th>\n          ))}\n          <th className=\"PeopleTable__column-title\">Mother</th>\n          <th className=\"PeopleTable__column-title\">Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <PersonRow key={person.slug} person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\nimport {\n  useSearchParams,\n} from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport { QueryParams, SortBy, SortOrder } from '../../types/queryParams';\nimport { Human, Child } from '../../types/human';\n\nimport { getPeople } from '../../api/people';\nimport { PeopleTable } from '../PeopleTable';\n\nfunction findParents(people: Human[]): Child[] {\n  return people.map(human => {\n    const { motherName, fatherName } = human;\n\n    return {\n      ...human,\n      mother: people.find(mother => motherName === mother.name),\n      father: people.find(father => fatherName === father.name),\n    };\n  });\n}\n\nconst compareStrings = (a: string, b: string) => a.localeCompare(b);\n\nexport const PeoplePage: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query')?.toLowerCase() || '';\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n  const [queryParams, setQueryParams] = useState<QueryParams>({\n    query,\n    sortBy,\n    sortOrder,\n  });\n  const [people, setPeople] = useState<Child[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(newPeople => setPeople(findParents(newPeople)));\n  }, []);\n\n  const filteredPeople = people\n    .filter(human => human.name.toLowerCase().includes(query)\n      || human.motherName?.toLowerCase().includes(query)\n      || human.fatherName?.toLowerCase().includes(query));\n\n  const sortPeople = useCallback(() => {\n    if (!sortBy) {\n      return filteredPeople;\n    }\n\n    return [...filteredPeople].sort((p1, p2): number => {\n      switch (sortBy) {\n        case SortBy.Name:\n        case SortBy.Sex:\n          return sortOrder === SortOrder.asc\n            ? compareStrings(p1[sortBy], p2[sortBy])\n            : compareStrings(p2[sortBy], p1[sortBy]);\n\n        case SortBy.Born:\n        case SortBy.Died:\n          return sortOrder === SortOrder.asc\n            ? p1[sortBy] - p2[sortBy]\n            : p2[sortBy] - p1[sortBy];\n\n        default:\n          return 0;\n      }\n    });\n  }, [filteredPeople, sortBy, sortOrder]);\n\n  const updateSearchParams = useCallback(\n    (newQuery: QueryParams) => {\n      const entries = Object.entries(newQuery);\n\n      entries.forEach(\n        ([queryName, value]) => (value\n          ? searchParams.set(queryName, value)\n          : searchParams.delete(queryName)\n        ),\n      );\n\n      setSearchParams(searchParams);\n    }, [],\n  );\n\n  const applyQueryWithDebounce = useCallback(\n    debounce((newQuery: QueryParams) => {\n      updateSearchParams(newQuery);\n    }, 500),\n    [],\n  );\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target: { name, value = '' } } = event;\n    const newQuery = { ...queryParams, [name]: value.toLowerCase() };\n\n    setQueryParams(newQuery);\n    applyQueryWithDebounce(newQuery);\n  };\n\n  const handleSortChange = useCallback((newSortByValue: SortBy) => {\n    const newQuery = {\n      ...queryParams,\n      sortBy: newSortByValue.toLowerCase(),\n    };\n\n    if (newSortByValue !== queryParams.sortBy) {\n      newQuery.sortOrder = SortOrder.asc;\n    } else {\n      switch (queryParams.sortOrder) {\n        case SortOrder.asc:\n          newQuery.sortOrder = SortOrder.desc;\n          break;\n\n        case SortOrder.desc:\n          newQuery.sortOrder = SortOrder.asc;\n          break;\n\n        default:\n          newQuery.sortOrder = '';\n          break;\n      }\n    }\n\n    setQueryParams(newQuery);\n    updateSearchParams(newQuery);\n  }, [queryParams]);\n\n  return (\n    <>\n      <h1>People page</h1>\n\n      <div className=\"name-filters\">\n        <h2>Filter by: </h2>\n\n        <input\n          className=\"input is-normal\"\n          data-cy=\"filterInput\"\n          name=\"query\"\n          placeholder=\"Person Name\"\n          value={queryParams.query}\n          onChange={handleFilterChange}\n        />\n      </div>\n\n      {people.length ? (\n        <PeopleTable\n          sortPeople={handleSortChange}\n          people={sortPeople()}\n        />\n      ) : <h1>There is nobody :/</h1> }\n    </>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header: React.FC = () => {\n  return (\n    <>\n      <nav className=\"navbar\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              'is-tab',\n              { 'is-active': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              'is-tab',\n              { 'is-active': isActive },\n            )}\n          >\n            People\n          </NavLink>\n        </div>\n      </nav>\n    </>\n  );\n};\n","import './App.scss';\nimport {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Header } from './components/Header';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <div className=\"App\">\n        <Header />\n\n        <div className=\"App__main\">\n          <Routes>\n            <Route path=\"/people/\" element={<PeoplePage />}>\n              <Route path=\":personSlug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n            <Route path=\"*\" element={<><h1>Page not found</h1></>} />\n          </Routes>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}