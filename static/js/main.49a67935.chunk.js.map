{"version":3,"sources":["PeopleTable/PeopleTable.tsx","HomePage/HomePage.tsx","api/people.ts","PeoplePage/PeoplePage.tsx","Header/Header.tsx","App.tsx","index.tsx"],"names":["TableColumns","HomePage","PEOPLE_URL","a","fetch","response","ok","status","statusText","Error","json","PeopleTable","people","className","Name","Sex","Born","Died","Mother","Father","map","person","name","sex","born","died","mother","father","PeoplePage","useState","setPeople","useEffect","getPeople","then","newPeople","human","motherName","fatherName","find","findParents","Header","to","isActive","classNames","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"6KAOKA,E,8CCPQC,EAAW,kBACtB,4C,8CCAIC,EAAU,UADC,iCACD,uC,4CAET,gCAAAC,EAAA,sEACkBC,MAAMF,GADxB,WACCG,EADD,QAGSC,GAHT,sBAIKC,EAAuBF,EAAvBE,OAAQC,EAAeH,EAAfG,WAEV,IAAIC,MAAJ,UAAaF,EAAb,cAAyBC,IAN5B,gCASEH,EAASK,QATX,4C,gCFIFV,K,YAAAA,E,UAAAA,E,YAAAA,E,YAAAA,E,gBAAAA,E,iBAAAA,M,KASE,IAAMW,EAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7C,OACE,wBAAOC,UAAU,oBAAjB,UACE,gCACE,+BACE,6BAAKb,EAAac,OAClB,6BAAKd,EAAae,MAClB,6BAAKf,EAAagB,OAClB,6BAAKhB,EAAaiB,OAClB,6BAAKjB,EAAakB,SAClB,6BAAKlB,EAAamB,cAGtB,gCACGP,EAAOQ,KAAI,SAAAC,GAAM,eAChB,qBAAsBR,UAAU,SAAhC,UACE,6BAAKQ,EAAOC,OACZ,6BAAKD,EAAOE,MACZ,6BAAKF,EAAOG,OACZ,6BAAKH,EAAOI,OACZ,uCAAKJ,EAAOK,cAAZ,aAAK,EAAeJ,OACpB,uCAAKD,EAAOM,cAAZ,aAAK,EAAeL,SANbD,EAAOC,eGdnB,IAAMM,EAAuB,WAClC,MAA4BC,mBAAkB,IAA9C,mBAAOjB,EAAP,KAAekB,EAAf,KAOA,OALAC,qBAAU,YDjBL,WAAP,gCCkBIC,GACGC,MAAK,SAAAC,GAAS,OAAIJ,EAjBzB,SAAqBlB,GACnB,OAAOA,EAAOQ,KAAI,SAAAe,GAChB,IAAQC,EAA2BD,EAA3BC,WAAYC,EAAeF,EAAfE,WAEpB,OAAO,2BACFF,GADL,IAEET,OAAQd,EAAO0B,MAAK,SAAAZ,GAAM,OAAIU,IAAeV,EAAOJ,QACpDK,OAAQf,EAAO0B,MAAK,SAAAX,GAAM,OAAIU,IAAeV,EAAOL,aAUvBiB,CAAYL,SAC1C,IAGD,qCACE,6CAEA,cAAC,EAAD,CAAatB,OAAQA,Q,gBCzBd4B,EAAmB,WAC9B,OACE,mCACE,qBAAK3B,UAAU,SAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACE4B,GAAG,QACH5B,UAAW,SAAA6B,GAAQ,OAAIC,IACrB,cACA,SACA,CAAE,YAAaD,KALnB,kBAWA,cAAC,IAAD,CACED,GAAG,UACH5B,UAAW,SAAA6B,GAAQ,OAAIC,IACrB,cACA,SACA,CAAE,YAAaD,KALnB,4BCSKE,EAnBO,WACpB,OACE,mCACE,sBAAK/B,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgC,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUL,GAAG,QAC1C,cAAC,IAAD,CAAOI,KAAK,IAAIC,QAAS,mCAAE,+DChBvCC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.49a67935.chunk.js","sourcesContent":["import React from 'react';\nimport { Child } from '../types/human';\n\ntype Props = {\n  people: Child[],\n};\n\nenum TableColumns {\n  Name = 'Name',\n  Sex = 'Sex',\n  Born = 'Born',\n  Died = 'Died',\n  Mother = 'Mother',\n  Father = 'Father',\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table className=\"PeopleTable table\">\n      <thead>\n        <tr>\n          <th>{TableColumns.Name}</th>\n          <th>{TableColumns.Sex}</th>\n          <th>{TableColumns.Born}</th>\n          <th>{TableColumns.Died}</th>\n          <th>{TableColumns.Mother}</th>\n          <th>{TableColumns.Father}</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <tr key={person.name} className=\"Person\">\n            <th>{person.name}</th>\n            <th>{person.sex}</th>\n            <th>{person.born}</th>\n            <th>{person.died}</th>\n            <th>{person.mother?.name}</th>\n            <th>{person.father?.name}</th>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","export const HomePage = () => (\n  <h1>Home Page</h1>\n);\n","const BASE_URL = 'https://mate-academy.github.io';\nconst PEOPLE_URL = `${BASE_URL}/react_people-table/api/people.json`;\n\nexport async function getPeople() {\n  const response = await fetch(PEOPLE_URL);\n\n  if (!response.ok) {\n    const { status, statusText } = response;\n\n    throw new Error(`${status} - ${statusText}`);\n  }\n\n  return response.json();\n}\n","import React, { useState, useEffect } from 'react';\nimport { getPeople } from '../api/people';\nimport { PeopleTable } from '../PeopleTable';\nimport { Human, Child } from '../types/human';\n\nfunction findParents(people: Human[]): Child[] {\n  return people.map(human => {\n    const { motherName, fatherName } = human;\n\n    return {\n      ...human,\n      mother: people.find(mother => motherName === mother.name),\n      father: people.find(father => fatherName === father.name),\n    };\n  });\n}\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Human[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(newPeople => setPeople(findParents(newPeople)));\n  }, []);\n\n  return (\n    <>\n      <h1>People page</h1>\n\n      <PeopleTable people={people} />\n    </>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header: React.FC = () => {\n  return (\n    <>\n      <nav className=\"navbar\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/home\"\n            className={isActive => classNames(\n              'navbar-item',\n              'is-tab',\n              { 'is-active': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={isActive => classNames(\n              'navbar-item',\n              'is-tab',\n              { 'is-active': isActive },\n            )}\n          >\n            People\n          </NavLink>\n        </div>\n      </nav>\n    </>\n  );\n};\n","import './App.scss';\nimport {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { HomePage } from './HomePage';\nimport { PeoplePage } from './PeoplePage';\nimport { Header } from './Header';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <div className=\"App\">\n        <Header />\n\n        <div className=\"App__main\">\n          <Routes>\n            <Route path=\"/people\" element={<PeoplePage />} />\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n            <Route path=\"*\" element={<><h1>Page not found</h1></>} />\n          </Routes>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}